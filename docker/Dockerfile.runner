ARG LAMBDA_IMAGE="amazon/aws-lambda-provided:al2"
ARG RIE_ARCH="amd64"

FROM condaforge/miniforge3:latest AS condasetup
LABEL MAINTAINER="Howard Butler <howard@hobu.co>"

ARG TARGETPLATFORM
ARG TARGETARCH
ARG TARGETVARIANT
RUN printf "I'm building for TARGETPLATFORM=${TARGETPLATFORM}" \
    && printf ", TARGETARCH=${TARGETARCH}" \
    && printf ", TARGETVARIANT=${TARGETVARIANT} \n" \
    && printf "With uname -s : " && uname -s \
    && printf "and  uname -m : " && uname -mm

ENV CONDA_ENV_NAME="pdal"
ENV CONDAENV="/opt/conda/envs/${CONDA_ENV_NAME}"


# Create the environment:
COPY ./docker/build-environment.yml .
RUN conda env create -f build-environment.yml
RUN mamba update --all -y

COPY ./docker/run-environment.yml .
RUN conda env create -f run-environment.yml


SHELL ["conda", "run", "-n", "build", "/bin/bash", "-c"]
RUN conda-pack -n ${CONDA_ENV_NAME} --dest-prefix=/var/task -o /tmp/env.tar && \
     mkdir /venv && cd /venv && tar xf /tmp/env.tar  && \
     rm /tmp/env.tar


FROM --platform=$TARGETPLATFORM ${LAMBDA_IMAGE:?} AS al2

ARG RIE_ARCH
ARG LAMBDA_IMAGE
ARG TARGETPLATFORM
ARG TARGETARCH
ENV TARGETPLATFORM=${TARGETPLATFORM:-linux/amd64}
ENV TARGETARCH=${TARGETARCH:-amd64}



ENV CONDAENV="/var/task"
ENV CONDA_PREFIX="/var/task"
ENV TARGETPLATFORM="${TARGETPLATFORM}"
COPY --from=condasetup /venv ${CONDAENV}



ENV PROJ_LIB=${CONDAENV}/share/proj
ENV PROJ_NETWORK=TRUE
ENV PATH=$PATH:${CONDAENV}/bin
ENV LD_LIBRARY_PATH=${CONDAENV}/lib
ENV HOME=/var/task/

RUN /var/task/bin/python -m pip install awslambdaric==3.1.1
ADD https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie-${RIE_ARCH} /usr/bin/aws-lambda-rie

RUN chmod +x /usr/bin/aws-lambda-rie


WORKDIR /var/task
COPY ./docker/python-entry.sh ./
COPY ./handlers/python/ /var/task/lib/python3.11/site-packages/pdal_lambda
COPY ./docker/root-bashrc /root/.bashrc
ENTRYPOINT [ "/var/task/python-entry.sh" ]
